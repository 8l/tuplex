## Tests building nested types with VALUE type parameters.

type Matrix<E, R : UInt, C : UInt> {
    type Row : Array<E, (C)>;

    rows : Array< Row, (R) >;

    ##self( other : &Matrix<E,(R),(C)> ) {
    self( other : &Self ) {
        self.rows = other.rows;
    }

    self() {
    }
}

make_matrix( r : UInt, c : UInt ) -> &Matrix {
    return new Matrix<Int, (r), (c)>();
}

main()->Int {
    type Mat : Matrix<Int, (2), (3)>;
    m : Mat;
    
    return 0;
}
