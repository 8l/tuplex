## interface adapter tests (including interface adapter modifiability)

type IntfA derives Interface {
    public abstract get_value()->Int;

    ## "mixin" or default-implementation interface methods:
    public mixin_method_1()->Int { return 1; }
    public mixin_method_2()->Int { return 2; }
}

type IntfB derives Interface {
    public abstract set_value( v : Int );
}

type Type derives Tuple, IntfA, IntfB {
    fld : ~Int;

    self(f : Int) { self.fld = f; }

    public override get_value()->Int {
        return self.fld;
    }

    public override set_value( v : Int ) {
        self.fld = v;
    }

    public override mixin_method_2()->Int {
        return 3;
    }
}


mixin_tests() {
    t := Type(42);
    r : &IntfA = &t;
    s : &IntfB = &t;
    assert t.get_value() == 42;
    assert r.get_value() == 42;
    t.set_value(112);
    assert t.get_value() == 112;
    assert r.get_value() == 112;
    s.set_value(117);
    assert t.get_value() == 117;
    assert r.get_value() == 117;

    assert r.mixin_method_1() == 1;
    assert t.mixin_method_1() == 1;
    assert r.mixin_method_2() == 3;
    assert t.mixin_method_2() == 3;
}


main()->Int {
    mixin_tests();
    return 0;
}
