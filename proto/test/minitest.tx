module my

type AType mod derives Tuple {
    field1 : ~Long
    field2 : ~Float

    public self() {
        self^.field1 = 17
        self^.field2 = 3.14
    }
    public self(f1 : Long, f2 : Float) {
        self^.field1 = f1
        self^.field2 = f2
    }
}

type BType mod derives AType {
    field3 : Bool
}

heap_test() Int {
    stackObj := AType()
    ##stackRef := []~&~AType(&stackObj)
    heapObj := new AType()
    heapObj := new AType(2, 2.71)
    return Int( heapObj^.field1 )
    /*
    heapVar : &~Int = new ~Int()
    heapVar^ = 2
    return heapVar^
    heapRef : &~&~Int = new ~&~Int()
    heapRef^ = heapVar
    heapArr := new Array<Int,100>()
    return heapRef^^
    */
}

main() Int {
    return heap_test()
}
