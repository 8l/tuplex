## step-by-step support for ranges, arrays, sequences, and for-loops 

## Array literals:
## array_literal :=    ‘[‘ expr_list ‘]’
## Future: expansion operator '...'

array_construction() {
    a1 := Array<Int,3>( 1, 2, 3 );
    a2 := Array<Int>( 1, 2, 3 );

##  a3 := Array<>( 1, 2, 3 );  ## support?
##  a4 := Array( 1, 2, 3 );    ## support?

    a5 := [3]Int( 1, 2, 3 );
    a6 := []Int( 1, 2, 3 );
    a7 := [ Int(1), 2, 3 ];

    a8 := new [3]Int( 1, 2, 3 );
    a9 := new Array<Int,3>( 1, 2, 3 );
    a10 := new Array<Int>( 1, 2, 3 );

##  FUTURE: In-place expansion of sequences:
##  aa := Array<Int>( 1, 2, 3, a1... );
}



/*
for_loops() {
    for i in 0:10 {
    }

    for i in 0:9,
        j in 9:-1:0 {
    }

    for i, iter in str[0:9] {
        print(i)
        if i == 'a'
            iter.next()
    }
}
*/

main() -> Int {
    array_construction();
    return 0;
}
