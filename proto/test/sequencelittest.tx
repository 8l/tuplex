module my


t1 := Tuple( 1, 2, 3 )
t2 := { 1, 2, 3 }

a1 := Array<Int,3>( 1, 2, 3 )
a2 := Array<Int>( 1, 2, 3 )
a3 := Array<>( 1, 2, 3 )
a4 := Array( 1, 2, 3 )
a5 := [3]Int( 1, 2, 3 )
a6 := []Int( 1, 2, 3 )
a7 := [ 1, 2, 3 ]


/*
Literal sequence grammar:
expr , expr , expr ...

To distinguish between a single-element sequence
and a sequenceable that shall be traversed:

( seq )   ## traverses (expands) the sequenceable
( seq, )  ## single-element sequence of sequenceables

Or perhaps better:
  (also consistent with func args syntax)

( seq... ) ## traverses (expands) the sequenceable
( seq )    ## single-element sequence of sequenceables

*/
